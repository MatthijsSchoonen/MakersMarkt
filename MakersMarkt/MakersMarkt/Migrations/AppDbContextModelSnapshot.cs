// <auto-generated />
using System;
using MakersMarkt.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MakersMarkt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MakersMarkt.Database.Models.Complexity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Complexities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Simple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Complex"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Durability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LifeTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Durabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Low durability",
                            LifeTime = 1,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Description = "High durability",
                            LifeTime = 5,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10,
                            Name = "Material1"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 20,
                            Name = "Material2"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerId = 1,
                            Description = "Order1",
                            SellerId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuyerId = 2,
                            Description = "Order2",
                            SellerId = 1,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.PasswordReset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordResets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "code1",
                            CreatedAt = new DateTime(2025, 3, 11, 10, 41, 21, 720, DateTimeKind.Local).AddTicks(4775),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "code2",
                            CreatedAt = new DateTime(2025, 3, 11, 10, 41, 21, 720, DateTimeKind.Local).AddTicks(4777),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFlagged")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Reports")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description1",
                            IsFlagged = false,
                            Name = "Product1",
                            Price = 10.0m,
                            ProductTypeId = 1,
                            Reports = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description2",
                            IsFlagged = true,
                            Name = "Product2",
                            Price = 20.0m,
                            ProductTypeId = 2,
                            Reports = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.ProductProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductProperties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Property1",
                            ProductId = 1,
                            Value = "Value1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Property2",
                            ProductId = 2,
                            Value = "Value2"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.ProductSpecs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplexityId")
                        .HasColumnType("int");

                    b.Property<int>("DurabilityId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplexityId");

                    b.HasIndex("DurabilityId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSpecs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComplexityId = 1,
                            DurabilityId = 1,
                            MaterialId = 1,
                            ProductId = 1,
                            ProductionTime = 5
                        },
                        new
                        {
                            Id = 2,
                            ComplexityId = 2,
                            DurabilityId = 2,
                            MaterialId = 2,
                            ProductId = 2,
                            ProductionTime = 10
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Type1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Type2"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "In Production"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sent"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Declined, refund sent."
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Trades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipientId = 2,
                            SenderId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            RecipientId = 1,
                            SenderId = 2,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.TradeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TradeId");

                    b.ToTable("TradeProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            TradeId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            TradeId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEmails")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LoginBlockedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowEmails = true,
                            Balance = 100m,
                            Email = "user1@example.com",
                            IsVerified = true,
                            Password = "$2a$11$/kpvEHAiTkZzmpwudeiiZujCdz43vCW/s4NOCsWov4.yFoK/J7lXa",
                            RoleId = 1,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            AllowEmails = false,
                            Balance = 200m,
                            Email = "user2@example.com",
                            IsVerified = false,
                            Password = "$2a$11$1ZE7/mIq6j/xIKmRZHolReJu4pPWAG/zBP1DOsrEptGSP18juQHWy",
                            RoleId = 2,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.UserNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "This is the first notification.",
                            Title = "Notification 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Text = "This is the second notification.",
                            Title = "Notification 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.UserProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Order", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Seller");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.OrderProduct", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.PasswordReset", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Product", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.ProductProperty", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.ProductSpecs", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Complexity", "Complexity")
                        .WithMany()
                        .HasForeignKey("ComplexityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Durability", "Durability")
                        .WithMany()
                        .HasForeignKey("DurabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complexity");

                    b.Navigation("Durability");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.Trade", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.TradeProduct", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.Trade", "Trade")
                        .WithMany()
                        .HasForeignKey("TradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Trade");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.User", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.UserNotification", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakersMarkt.Database.Models.UserProduct", b =>
                {
                    b.HasOne("MakersMarkt.Database.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakersMarkt.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
